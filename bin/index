#!/usr/bin/env node

/**
 * Module dependencies.
 */
const program = require('commander');
const {exec} = require('child_process');
const boxen = require('boxen');
const chalk = require('chalk');
const path = require('path');

/**
 * Config and import program
 */
const pkg = require('../package.json');
const argv = require('minimist')(process.argv.slice(2));
const { getIpAddress } = require('../util/os')

/**
 * --version, -V
 * -s static 
 * -p: port
 */

program
  .version(pkg.version)
  .usage('<command> [project-name]');

program
  .option('-s, --static')
  .action(async (value, cmd) => {
    console.log('argv>>>', argv['s']);
    if (argv['s']) {
      argv['s'] && (process.env.static = argv['s']);
      console.log('>>>', process.env.static);
      await exec(`npm run dev`);
      const IPAddress = getIpAddress();
      await console.log(
        boxen(
          `${chalk.blue('Serving!')}\n- Local:  http://localhost:${chalk.red(port)}\n- On Your Network:  http://${IPAddress}:${chalk.red(port)}\nCopied local address to clipboard!`,
          {
            padding: 1,
            borderColor: 'yellow'
          }
        )
      );
    }
  });

program
  .option('-p, --port')
  .action(async (value, cmd) => {
    if (argv['p']) {
      const port = process.env.port = argv['p'];
      argv['s'] && (process.env.static = argv['s']);
      await exec(`npm run dev`);
      const IPAddress = getIpAddress();
      await console.log(
        boxen(
          `${chalk.blue('Serving!')}\n- Local:  http://localhost:${chalk.red(port)}\n- On Your Network:  http://${IPAddress}:${chalk.red(port)}\nCopied local address to clipboard!`,
          {
            padding: 1,
            borderColor: 'yellow'
          }
        )
      );
    }
  });

console.log('>>>', argv['s'], argv['p']);
program.parse(process.argv);
if (program.debug) console.log(program.opts());